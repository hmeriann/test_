name: Build and Process

on:
  workflow_dispatch:

jobs:
  define-matrix:
    name: Define Initial Matrix
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.set-matrix.outputs.branches }}

    steps:
      - id: set-matrix
        run: |
          # Define the initial matrix as a JSON array
          branches=$(jq -n --argjson arr '["main", "feature"]' '$arr')
          echo "branches=${branches}" >> $GITHUB_OUTPUT

  build:
    name: Build and Copy Branches
    needs: define-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.define-matrix.outputs.branches) }}
    outputs:
      successful_builds: ${{ steps.copy-branches.outputs.successful_builds }}

    steps:
      - name: Simulate Build
        id: build-step
        run: |
          echo "Building branch: ${{ matrix.branch }}"
          # Simulate build process (no conditions needed)
          echo "Build completed for branch: ${{ matrix.branch }}"

      - name: Copy Branches
        id: copy-branches
        run: |
          # Initialize array to store branches
          successful_builds=$(jq -n --arg branch "${{ matrix.branch }}" '[$branch]')
          echo "successful_builds=${successful_builds}" >> $GITHUB_OUTPUT

  run-tests:
    name: Run Tests on Copied Branches
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.build.outputs.successful_builds) }}

    steps:
      - name: Output Branches
        run: |
          echo "Branch: ${{ matrix.branch }}"
