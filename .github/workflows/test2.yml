name: Build and Test

on:
  workflow_dispatch:

jobs:
  define-matrix:
    name: Define Branch Matrix
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.set-matrix.outputs.branches }}

    steps:
      - id: set-matrix
        run: |
          echo "branches=$(jq -n --argjson arr '["main", "feature"]' '$arr')" >> $GITHUB_ENV

  build:
    name: Build Branches
    needs: define-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.define-matrix.outputs.branches) }}
    outputs:
      successful_builds: ${{ steps.collect-builds.outputs.successful_builds }}

    steps:
      - name: Simulate Build
        id: build-step
        run: |
          echo "Building branch: ${{ matrix.branch }}"
          if [[ "${{ matrix.branch }}" == "main" ]]; then
            echo "Simulated failure for main branch, but not exiting with error"
            # Just output a message and continue with exit code 0
          else
            echo "Build successful for branch: ${{ matrix.branch }}"
          fi

      - name: Collect Successful Builds
        id: collect-builds
        run: |
          if [[ "${{ matrix.branch }}" != "main" ]]; then
            echo "successful_builds=$(jq -n --arg branch "${{ matrix.branch }}" '[$branch]')" >> $GITHUB_ENV
          else
            echo "successful_builds=[]" >> $GITHUB_ENV
          fi

  run-tests:
    name: Run Tests on Successful Builds
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.build.outputs.successful_builds) }}
        test: ['1', '2', '3']

    steps:
      - name: Run Tests
        run: |
          echo "Running test ${{ matrix.test }} on branch ${{ matrix.branch }}"
