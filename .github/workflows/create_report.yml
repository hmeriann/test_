name: Create Report
on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
        
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  prepare-result:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo with the script
        uses: actions/checkout@v4
      - name: Download build failures
        uses: actions/download-artifact@v4
        with:
          pattern: issue_body_${{ inputs.platform }}*
          path: failures
      - name: Download extensions test results
        if: always()
        uses: actions/download-artifact@v4
        with:
          pattern: issue_ext_${{ inputs.platform }}*
          path: ext_failures
      - name: Prepare a result table
        shell: bash
        if: always()
        run: |
          if ls ext_failures/issue_ext*.txt 1> /dev/null 2>&1; then
            python -m pip install duckdb
            echo "nightly_build,runs_on,version,extension,failed_statement" > result.csv
            cat ext_failures/issue_ext*.txt >> result.csv
            # scripts/prepare_report.py creates res_${{ inputs.platform }}.md file
            python scripts/prepare_report.py result.csv --nightly_build ${{ inputs.platform }}
          fi
      - name: Create result file
        shell: bash
        run: |
          if ls issue_body*/issue_body*/* 1> /dev/null 2>&1; then
            cat issue_body*/issue_body*/* > report_${{ inputs.platform }}.md
          fi
          if [ -f res_${{ inputs.platform }}.md ]; then
            cat res_${{ inputs.platform }}.md >> report_${{ inputs.platform }}.md
          fi
      - name: Upload result file
        uses: actions/upload-artifact@v4
        with:
          name: report_${{ inputs.platform }}
          path: report_${{ inputs.platform }}.md
