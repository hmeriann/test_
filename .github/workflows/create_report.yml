name: Create Report
on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
        
env:
  GH_TOKEN: ${{ github.token }}
jobs:
  prepare-result:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo with the script
        uses: actions/checkout@v4
      - name: Download build failures
        uses: actions/download-artifact@v4
        with:
          pattern: issue_body_${{ inputs.platform }}*
          path: failures_${{ inputs.platform }}
      - name: Download extensions test results
        if: always()
        uses: actions/download-artifact@v4
        with:
          pattern: issue_ext_${{ inputs.platform }}*
          path: ext_failures_${{ inputs.platform }}
    #   - uses: owenthereal/action-upterm@v1
      - name: Prepare a result table
        shell: bash
        if: always()
        run: |
          if [ $(ls ext_failures_*/issue_ext*/ | wc -l) -gt 0 ]; then
            python -m pip install duckdb
            echo "nightly_build,runs_on,version,extension,failed_statement" > result.csv
            cat ext_failures_${{ inputs.platform }}/issue_ext*/*.txt >> result.csv
            cat result.csv
            echo ⚠️⚠️⚠️
            # scripts/prepare_report.py creates res_${{ inputs.platform }}.md file
            python scripts/prepare_report.py result.csv --platform ${{ inputs.platform }}
            echo ✅✅✅
            cat res_*.md
          fi
      - name: Create result file
        shell: bash
        run: |
          if [ $(ls failures_*/issue_body*/ | wc -l) -gt 0 ]; then
            cat failures_${{ inputs.platform }}/issue_body*/* > report_${{ inputs.platform }}.md
          fi
          if [ -f res_${{ inputs.platform }}.md ]; then
            cat res_${{ inputs.platform }}.md >> report_${{ inputs.platform }}.md
          fi
          echo ✅
          cat report_${{ inputs.platform }}.md
      - name: Upload result file
        uses: actions/upload-artifact@v4
        with:
          name: report_${{ inputs.platform }}
          path: report_${{ inputs.platform }}.md
