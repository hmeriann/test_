name: Test Sparse-Checkout
on:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

jobs:
  build-and-setup:
    name: Build DuckDB versions and link the benchmarks
    strategy:
      matrix:
        branch: [ "main" ]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      GEN: ninja
      BUILD_BENCHMARK: 1
      BUILD_TPCH: 1
      BUILD_TPCDS: 1
      BUILD_JSON: 1
      BUILD_HTTPFS: 1
      BUILD_ICU: 1
      BUILD_JEMALLOC: 1
      CORE_EXTENSIONS: "inet;delta"
      VCPKG_TARGET_TRIPLET: x64-linux
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      regression_output: regression_output.txt
    outputs:
      failed_build: ${{ steps.failed-build.outputs.failed_build }}
    steps:
 
      - name: Install
        shell: bash
        run: sudo apt-get update -y -qq && sudo apt-get install -y -qq g++ ninja-build cmake make python-is-python3 libssl-dev pip gh python3-requests
        
      - name: checkout duckdb-curr
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb'
          ref: ${{ matrix.branch }}
          fetch-depth: 0
          path: duckdb-curr-${{ matrix.branch }}

      - name: checkout duckdb-old
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb'
          ref: ${{ matrix.branch }}
          fetch-depth: 0
          path: duckdb-old-${{ matrix.branch }}

      - name: Checkout duckdb-old to week ago version
        shell: bash
        working-directory: duckdb-old-${{ matrix.branch }}
        run: |
          git checkout $( cat ../../duckdb_curr_version_${{ matrix.branch }}.txt )

      - name: Store current git hash of duckdb-curr
        shell: bash
        working-directory: duckdb-curr-${{ matrix.branch }}
        run: |
          # update duckdb_curr_version_${{ matrix.branch }}.txt
          git rev-parse --verify HEAD > ../../duckdb_curr_version_${{ matrix.branch }}.txt

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.1
        with:
          vcpkgGitCommitId: a1a1cbc975abf909a6c8985a6a2b8fe20bbd9bd6

      - name: Configure OpenSSL for Rust
        run: |
          echo "OPENSSL_ROOT_DIR=`pwd`/build/release/vcpkg_installed/x64-linux" >> $GITHUB_ENV
          echo "OPENSSL_DIR=`pwd`/build/release/vcpkg_installed/x64-linux" >> $GITHUB_ENV
          echo "OPENSSL_USE_STATIC_LIBS=true" >> $GITHUB_ENV
      


      - name: Build old and current
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          cd duckdb-curr-${{ matrix.branch }} && make clean && make
          cd ..
          cd duckdb-old-${{ matrix.branch }} && make clean && make


      - name: fetch test-files for delta
        uses: actions/checkout@v4
        with:
          repository: 'duckdb/duckdb_delta'
          ref: main
          fetch-depth: 1
          sparse-checkout: |
            benchmark/tpcds/sf1/remote/delta/
            .github/regression/tpcds_sf1_local.csv
          path: duckdb-old-${{ matrix.branch }}/
          
      - name: copy fetched files
        working-directory: duckdb-old-${{ matrix.branch }}
        run: |
          sed -i 's/\/local\//\/remote\//g' .github/regression/tpcds_sf1_local.csv
          cp -r benchmark/tpcds/sf1/remote/delta/ benchmark/tpcds/sf1/
          cp .github/regression/tpcds_sf1_local.csv .github/regression/

      - name: Set up benchmarks 
        shell: bash
        working-directory: duckdb-old-${{ matrix.branch }}
        run: |
          # we do this so new added benchmarks that break duckdb old
          # do not cause failures.
          rm -rf ../duckdb-curr-${{ matrix.branch }}/benchmark
          mkdir ../duckdb-curr-${{ matrix.branch }}/benchmark
          cp -r benchmark ../duckdb-curr-${{ matrix.branch }}
      
      - name: Run Regression Test
        continue-on-error: true
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          python duckdb-curr-${{ matrix.branch }}/scripts/regression_test_runner.py \
            --old=duckdb-old-${{ matrix.branch }}/build/release/benchmark/benchmark_runner \
            --new=duckdb-curr-${{ matrix.branch }}/build/release/benchmark/benchmark_runner \
            --benchmarks=duckdb-curr-${{ matrix.branch }}/.github/regression/tpcds_sf1_local.csv \
            --verbose > ${{ steps.create.outputs.file_name }}

      - uses: actions/checkout@v2
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        with:
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
          limit-access-to-actor: true
          ## limits ssh access and adds the ssh public keys of the listed GitHub users
          limit-access-to-users: hmeriann
