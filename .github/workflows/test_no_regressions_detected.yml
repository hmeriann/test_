name: Test - file issue when no regressions detected
on:
  workflow_dispatch:
env:
  gh_issue_repo: hmeriann/test_
  GH_TOKEN: ${{ github.token }}
jobs:
  configure:
    name: Config
    runs-on: ubuntu-latest
    steps:
      - run: exit 0

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
      
  run-tests:
    name: Setup
    strategy:
      matrix:
        branch: ["main", "feature"]
    runs-on: ubuntu-latest
    outputs:
      file_name: ${{ steps.create.outputs.file_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: |
          for output in regression*.txt; do
            # if ! grep -q "NO REGRESSIONS DETECTED" "$output"; then
              echo ❇️ $(cat $output)
              printf " *️⃣ [ Regression Test $output ]\n" > issue_body_$output_${{ matrix.branch }}.txt
              printf "Regression Output \n \`\`\` \n $(awk '/REGRESSIONS DETECTED/,/OTHER TIMINGS/ { if ($0 !~ /NO REGRESSIONS DETECTED/) print }' $output) \n \`\`\` \n"  >> issue_body_$output_${{ matrix.branch }}.txt
            # fi
          done
          echo ✅
      - name: Upload issue_body
        uses: actions/upload-artifact@v4
        with:
          path: ./issue_*.txt
          name: issue_body_${{ matrix.branch }}

  file-issue:
    name: File Issue
    needs: 
      - configure
      - build
      - run-tests
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        if: always()
        uses: actions/download-artifact@v4
        with:
          pattern: issue_body*
          merge-multiple: true
          
      - name: File issue on preparation steps
        if: |
            contains(github.ref_name, 'main') && 
            (needs.configure.result != 'success' ||
            needs.build.result != 'success')
        run: |
          echo "Benchmark preparation steps have failed, please check the \
            [workflow run](https://github.com/duckdblabs/duckdb-internal/actions/runs/${{ github.run_id }}) for details." > report.txt

      - name: Create a Report
        run: |
          if grep -q "REGRESSIONS DETECTED" issue_body*.txt; then
            echo "Regressions detected, GitHub issue will be filed."
            cat issue_body*.txt >> report.txt
          fi

      - name: Send issue to gh
        if: success()
        run: |
          # create issue
          gh issue create --repo ${{ env.gh_issue_repo }} --title "Weekly Regression Test Failure" --body-file report.txt
