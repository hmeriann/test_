name: Calling Nightly Builds Check AARCH64
on:
  push:
  schedule:
    - cron: 0 9 * * * # runs at 10am CET DAILY
  workflow_dispatch:

permissions:
  contents: read
  issues: write

env:
  GH_TOKEN: ${{ github.token }}
  gh_repo: duckdb/duckdb
jobs:
  linux:
    name: Check LinuxRelease
    uses: ./.github/workflows/nrc_copy.yml
    with:
      nightly-build: LinuxRelease
      runs-on: ubuntu-latest
      platform: linux
      architecture: ${{ matrix.architecture }}
    strategy:
      matrix:
        # architecture: [ linux-aarch64 ]
        architecture: [ linux-amd64, linux-aarch64 ]
  linux-test:
    name: Test LinuxRelease
    needs: linux
    if: needs.linux.outputs.has_artifact == 'true'
    uses: ./.github/workflows/tests_nbc_copy.yml
    with:
      nightly-build: LinuxRelease
      runs-on: ubuntu-latest
      platform: linux
      architecture: ${{ matrix.architecture }}
    strategy:
      matrix:
        # architecture: [ linux-aarch64 ]
        architecture: [ linux-amd64, linux-aarch64 ]
  linux-report:
    name: Create Report for linux
    needs: 
      - linux
      - linux-test
    if: needs.linux.outputs.is_failure == 'true' || needs.linux-test.result == 'success'
    uses: ./.github/workflows/create_report.yml
    with:
      platform: linux
      nightly-build: LinuxRelease
      run_url: ${{ needs.linux.outputs.run_url }}
        
  osx:
    name: Check OSX
    uses: ./.github/workflows/nrc_copy.yml
    with:
      nightly-build: OSX
      platform: osx
      architecture: osx-universal
      runs-on: macos-latest
  osx-test:
    name: Test OSX
    needs: osx
    if: needs.osx.outputs.has_artifact == 'true'
    uses: ./.github/workflows/tests_nbc_copy.yml
    with:
      nightly-build: OSX
      platform: osx
      architecture: osx-universal
      runs-on: macos-latest
  osx-report:
    name: Create Report for OSX
    needs: 
      - osx
      - osx-test
    if: needs.osx.outputs.is_failure == 'true' || needs.osx-test.result == 'success'
    uses: ./.github/workflows/create_report.yml
    with:
      platform: osx
      nightly-build: OSX
      run_url: ${{ needs.osx.outputs.run_url }}

  windows:
    name: Check Windows
    uses: ./.github/workflows/nrc_copy.yml
    with:
      nightly-build: Windows
      runs-on: windows-2019
      platform: windows
      architecture: ${{ matrix.architecture }}
    strategy:
      matrix:
        architecture: [ windows-amd64 ]
        # architecture: [ windows-amd64, windows-arm64 ]  
  windows-test:
    name: Test Windows
    needs: windows
    if: needs.windows.outputs.has_artifact == 'true'
    uses: ./.github/workflows/tests_nbc.yml
    with:
      nightly-build: Windows
      platform: windows
      architecture: windows-amd64
      runs-on: windows-2019
  windows-report:
    name: Create Report for Windows
    needs: 
      - windows
      - windows-test
    if: needs.windows.outputs.is_failure == 'true' || needs.windows-test.result == 'success'
    uses: ./.github/workflows/create_report.yml
    with:
      platform: windows
      nightly-build: Windows
      run_url: ${{ needs.windows.outputs.run_url }}

  python:
    name: Check Python
    uses: ./.github/workflows/nrc_copy.yml
    with:
      nightly-build: Python
      architecture: Python
      runs-on: ubuntu-20.04
  python-test:
    name: Test Python
    needs: python
    if: needs.python.outputs.is_failure == 'false'
    uses: ./.github/workflows/python_nbc.yml
    with:
      nightly-build: Python
  python-report:
    name: Create Report for Python
    needs: 
      - python
      - python-test
    if: always()
    uses: ./.github/workflows/create_report.yml
    with:
      platform: Python
      nightly-build: Python
      run_url: ${{ needs.python.outputs.run_url }}
  
  create-issue:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - linux-report
      - osx-report
      - windows-report
      - python-report
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: report_*
          path: report
      
      - name: Setup upterm session
        uses: owenthereal/action-upterm@v1
        
      - name: Report an issue
        if: success()
        run: |
          cat report/report*/* > final_report.md
          gh issue create --repo hmeriann/test_ --title "Nightly Builds Failures" --body-file final_report.md

      # - name: Create a post
      #   if: success()
      #   uses: ./.github/workflows/autopost.yml


